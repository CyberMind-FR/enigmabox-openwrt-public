#!/bin/ash

# TODO
# wifi: firewall erst dichtmachen, wenn wirklich ip vom gateway erhalten; dann kann man sich noch anmelden an einer loginseite.

# wlan0:    internet
# eth0:     internal LAN, phone/pc


iptables="/usr/sbin/iptables"
ip6tables="/usr/sbin/ip6tables"

# reset all
$iptables -F
$iptables -t nat -F
$ip6tables -F

# defaults
$iptables -P INPUT DROP

{{#if_missioncontrol}}$iptables -P OUTPUT DROP{{/if_missioncontrol}}
{{^if_missioncontrol}}$iptables -P OUTPUT ACCEPT{{/if_missioncontrol}}

$iptables -P FORWARD ACCEPT #no internet for the pc when dropping this :(
$ip6tables -P INPUT DROP
$ip6tables -P OUTPUT DROP
$ip6tables -P FORWARD DROP

# loopback
$iptables -A INPUT -i lo -j ACCEPT
$iptables -A OUTPUT -o lo -j ACCEPT

# syncookies
echo 1 > /proc/sys/net/ipv4/tcp_syncookies

# allow ping
$iptables -A INPUT -p icmp -m limit --limit 10/second -j ACCEPT
$iptables -A OUTPUT -p icmp -m limit --limit 10/second -j ACCEPT
$iptables -A INPUT -p icmp -j DROP

$ip6tables -A INPUT -p ipv6-icmp -m limit --limit 10/second -j ACCEPT
$ip6tables -A OUTPUT -p ipv6-icmp -m limit --limit 10/second -j ACCEPT
$ip6tables -A INPUT -p ipv6-icmp -j DROP

# allow related and established
$iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
$ip6tables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

{{#if_peering_port}}
# peering port
$iptables -A INPUT -p udp --dport {{peering_port}} -j ACCEPT
{{/if_peering_port}}

# allow OUTPUT for tun0, eth0, missioncontrol and peerings
$iptables -A OUTPUT -o tun0 -j ACCEPT
$iptables -A OUTPUT -o eth0 -j ACCEPT

{{#peerings}}
$iptables -A OUTPUT --dst {{ip}} -j ACCEPT
{{/peerings}}

{{#missioncontrol}}
$iptables -A OUTPUT --dst {{ip}} -j ACCEPT
{{/missioncontrol}}

# nat
$iptables -I POSTROUTING -t nat -o tun0 -j MASQUERADE

################################################################################

{{#if_teletext_enabled}}
# teletext
$ip6tables -A INPUT -i tun0 -p tcp --dport 3838 -j ACCEPT
$ip6tables -A OUTPUT -o tun0 -p tcp --sport 3838 -j ACCEPT
$ip6tables -A INPUT -i tun0 -p tcp --sport 3838 -j ACCEPT
$ip6tables -A OUTPUT -o tun0 -p tcp --dport 3838 -j ACCEPT
{{/if_teletext_enabled}}

{{#if_addresses}}# addresses{{/if_addresses}}
{{#addresses}}
$ip6tables -A INPUT -i tun0 --src {{ipv6}} -j ACCEPT
$ip6tables -A OUTPUT -o tun0 --dst {{ipv6}} -j ACCEPT
{{/addresses}}

for interface in $(echo "eth0"); do

    # allow forwarding for eth0, but not for others
    $iptables -A FORWARD -i "$interface" -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu

    # allow dhcp requests
    $iptables -A INPUT -p udp -i "$interface" --sport 67:68 --dport 67:68 -j ACCEPT

    # allow dns requests to tinyproxy
    $iptables -A INPUT -p udp -i "$interface" --sport 1024:65535 --dport 53 -j ACCEPT

    # ssh
    $iptables -A INPUT -p tcp -i "$interface" --dport 22 -j ACCEPT

    # webinterface
    $iptables -A INPUT -p tcp -i "$interface" --dport 80 -j ACCEPT

    # email
    $iptables -A INPUT -p tcp -i "$interface" --dport 25 -j ACCEPT
    $iptables -A INPUT -p tcp -i "$interface" --dport 110 -j ACCEPT
    $iptables -A INPUT -p tcp -i "$interface" --dport 143 -j ACCEPT

    # voip phone
    $iptables -A INPUT -p udp -i "$interface" --dport 5060 -j ACCEPT

    # tinyproxy
    $iptables -A INPUT -p tcp -i "$interface" --dport 8888 -j ACCEPT

    # grandstream phone provisioning
    $iptables -A INPUT -p tcp -i "$interface" --dport 8080 -j ACCEPT

done

################################################################################

# deny broadcasts (no logging)
#$iptables -A INPUT -m pkttype --pkt-type broadcast -j DROP
#$iptables -A INPUT -m pkttype --pkt-type multicast -j DROP

# log all dropped
#$iptables -A INPUT -m limit --limit 10/min -j LOG

