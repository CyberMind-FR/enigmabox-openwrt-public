#!/bin/ash

#set -xv

# variables
cfengine_site="/box/.cf-site.json"
cfagent="/opt/cfengine/bin/cf-agent"
webinterface="http://127.0.0.1:8000"
pidfile="/var/run/cfengine-apply.pid"
dynamic_output="/tmp/dynamic_output"
dynamic_status="/tmp/apply-in-progress"



run() {
    background=""
    if [[ "$1" == "background" || "$2" == "background" ]]; then
        > "$dynamic_output"
        background=1
    fi

    touch "$dynamic_status"

    echo "running cfengine and applying promises..."
    curl "$webinterface/cfengine/site.json" > "$cfengine_site"

    if [[ "$background" == 1 ]]; then
        (
            cfengine_run > "$dynamic_output"
            inform_webinterface
        ) &
    else
        cfengine_run && inform_webinterface
    fi

}

inform_webinterface() {
    curl --data "key=config_changed&value=False" -X POST "$webinterface/api/v1/set_option" &> /dev/null
    rm "$dynamic_status"
}

cfengine_run() {
    "$cfagent" --no-lock --inform --color=always /opt/enigmabox/cfengine-promises/site.cf
}



# Check if this script is already running
kill -0 $(cat "$pidfile" 2> /dev/null) 2> /dev/null
if [[ "$?" == "0" ]]; then
    echo "Script is already running, exiting"
    exit 1
else
    [[ -f "$pidfile" ]] && rm "$pidfile"
fi
echo $$ > "$pidfile"



# Option parsing
while getopts "s:b" opt; do
    case "$opt" in
    s)
        sleep="$OPTARG"
        ;;
    b)
        background="background"
        ;;
    :)
        echo "Option -$OPTARG requires an argument."
        exit 1
        ;;
    esac
done



if [[ -n "$sleep" ]]; then
    echo "sleeping for $sleep seconds..."
    sleep "$sleep"
fi

run $background

rm "$pidfile"

