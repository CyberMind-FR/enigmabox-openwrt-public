
bundle agent system_network
{
  vars:
      "json"
      data => readjson("$(g.site)", 64000);

  classes:
      "missioncontrol"
      expression => regcmp("true", "$(json[if_missioncontrol])");

  files:
      "/etc/hosts"
      template_method => "mustache",
      template_data => readjson("$(g.site)", 64000),
      edit_template => "$(this.promise_dirname)/templates/hosts.mustache",
      classes => if_repaired("restart_dnsmasq");

      "/etc/enigmabox/display_names"
      create => "true",
      template_method => "mustache",
      template_data => readjson("$(g.site)", 64000),
      edit_template => "$(this.promise_dirname)/templates/display_names.mustache";

      "/etc/dhcpd.conf"
      edit_template => "$(this.promise_dirname)/templates/dhcpd.conf",
      classes => if_repaired("restart_dhcpd");

      "/etc/config/dhcp"
      edit_template => "$(this.promise_dirname)/templates/config-dhcp",
      classes => if_repaired("restart_dnsmasq");

      "/usr/sbin/rebuild-iptables"
      create => "true",
      perms => script,
      template_method => "mustache",
      template_data => readjson("$(g.site)", 64000),
      edit_template => "$(this.promise_dirname)/templates/rebuild-iptables.mustache",
      classes => if_repaired("rebuild_iptables");

    missioncontrol::
      "/box/.missioncontrol"
      create => "true",
      template_method => "mustache",
      template_data => readjson("$(g.site)", 64000),
      edit_template => "$(this.promise_dirname)/templates/missioncontrol.mustache";

  commands:
    restart_dnsmasq::
      "/etc/init.d/dnsmasq restart";

    restart_dhcpd::
      "/etc/init.d/dhcpd restart";

    rebuild_iptables::
      "/usr/sbin/rebuild-iptables";

  reports:
      "checking network configuration: done";
}

